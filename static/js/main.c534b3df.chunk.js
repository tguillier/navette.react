(this["webpackJsonpnavette.react"]=this["webpackJsonpnavette.react"]||[]).push([[0],{14:function(e,t,a){},8:function(e,t,a){e.exports=a(9)},9:function(e,t,a){"use strict";a.r(t);var s=a(2),n=a(3),i=a(6),o=a(4),d=a(7),r=a(0),l=a.n(r),c=a(5),u=a.n(c),g=(a(14),function(e){function t(e){var a;return Object(s.a)(this,t),(a=Object(i.a)(this,Object(o.a)(t).call(this,e))).state={readers:null,barcodeReader:null,readerAutoClosed:!1,hidden:null,visibilityChange:null,availableReaders:null,openButton:document.getElementById("openButton"),closeButton:document.getElementById("closeButton"),activateButton:document.getElementById("activateButton"),deactivateButton:document.getElementById("deactivateButton"),addEventListenerButton:document.getElementById("addEventListenerButton"),enableTriggerButton:document.getElementById("enableTriggerButton"),clearLogButton:document.getElementById("clearLogButton"),logMessage:"",barcodeDataText:document.getElementById("BarcodeData"),symbTypeText:document.getElementById("SymbType"),readTimeText:document.getElementById("ReadTime")},a}return Object(d.a)(t,e),Object(n.a)(t,[{key:"componentDidMount",value:function(){this.setup()}},{key:"setup",value:function(){var e=this,t=new window.BarcodeReaders((function(t){return e.onBarcodeReadersComplete(t)}));this.setState({readers:t}),"undefined"!==typeof document.webkitHidden?this.setState({hidden:"webkitHidden",visibilityChange:"webkitvisibilitychange"}):"undefined"!==typeof document.hidden&&this.setState({hidden:"hidden",visibilityChange:"visibilitychange"}),this.state.hidden&&"undefined"!==typeof document.addEventListener&&"undefined"!==typeof document[this.state.hidden]&&document.addEventListener(this.state.visibilityChange,this.handleVisibilityChange,!1)}},{key:"onBarcodeReadersComplete",value:function(e){var t=this;0===e.status?this.state.readers.getAvailableBarcodeReaders((function(e){return t.onGetAvailableBarcodeReadersComplete(e)})):this.setState({logMessage:'<p style="color:red">Failed to create BarcodeReaders, status: '+e.status+", message: "+e.message+"</p>"})}},{key:"onBarcodeReaderComplete",value:function(e){0===e.status?(this.setState({logMessage:"BarcodeReader object successfully created"}),this.updateUI(!0,!0),this.state.barcodeReader.setBuffered("Symbology","Code39","Enable","true",this.onSetBufferedComplete),this.state.barcodeReader.setBuffered("Symbology","Code128","EnableCode128","true",this.onSetBufferedComplete),this.state.barcodeReader.setBuffered("Symbology","EANUPC","EnableEAN13","true",this.onSetBufferedComplete),this.state.barcodeReader.setBuffered("Symbology","QRCode","Enable","true",this.onSetBufferedComplete),this.state.barcodeReader.commitBuffer(this.onCommitComplete),this.addRemoveBarcodeListener(!0),window.addEventListener("beforeunload",this.onBeforeUnload)):(this.setState({barcodeReader:null,logMessage:this.state.logMessage+'<p style="color:red">Failed to create BarcodeReader, status: '+e.status+", message: "+e.message+"</p>"}),alert("Failed to create BarcodeReader, "+e.message))}},{key:"onSetBufferedComplete",value:function(e){0!==e.status&&this.setState({logMessage:this.state.logMessage+'<p style="color:red">setBuffered failed, status: '+e.status+", message: "+e.message+"</p><p>Family="+e.family+" Key="+e.key+" Option="+e.option+"</p>"})}},{key:"onCommitComplete",value:function(e){if(e.length>0)for(var t=0;t<e.length;t++){var a=e[t];0!==a.status&&(this.setState({logMessage:this.state.logMessage+'<p style="color:red">commitBuffer failed, status: '+a.status+", message: "+a.message+"</p>"}),"getBuffered"!==a.method&&"setBuffered"!==a.method||this.setState({logMessage:this.state.logMessage+"<p>Method="+a.method+" Family="+a.family+" Key="+a.key+" Option="+a.option+"</p>"}))}}},{key:"onBarcodeDataReady",value:function(e,t,a){this.setState({barcodeDataText:Object.assign({},this.state.barcodeDataText,{value:e}),symbTypeText:Object.assign({},this.state.symbTypeText,{value:t}),readTimeText:Object.assign({},this.state.readTimeText,{value:a})})}},{key:"updateUI",value:function(e,t){this.setState({openButton:Object.assign({},this.state.openButton,{disabled:e}),closeButton:Object.assign({},this.state.closeButton,{disabled:!e}),activateButton:Object.assign({},this.state.activateButton,{disabled:!e}),deactivateButton:Object.assign({},this.state.deactivateButton,{disabled:!e}),addEventListenerButton:Object.assign({},this.state.addEventListenerButton,{disabled:!e}),enableTriggerButton:Object.assign({},this.state.enableTriggerButton,{disabled:!e})}),t&&this.setState({barcodeDataText:Object.assign({},this.state.barcodeDataText,{value:""}),symbTypeText:Object.assign({},this.state.symbTypeText,{value:""}),readTimeText:Object.assign({},this.state.readTimeText,{value:""})})}},{key:"handleVisibilityChange",value:function(){document[this.state.hidden]?this.closeBarcodeReader(!0):this.state.readerAutoClosed&&this.openBarcodeReader()}},{key:"openBarcodeReader",value:function(e){var a=this;this.state.barcodeReader||this.setState({barcodeReader:new t(e,(function(e){return a.onBarcodeReaderComplete(e)}))})}},{key:"closeBarcodeReader",value:function(e){this.state.barcodeReader&&(this.setState({readerAutoClosed:e}),this.state.barcodeReader.close((function(e){0===e.status?(this.setState({barcodeReader:null,logMessage:this.state.logMessage+'<p style="color:blue">BarcodeReader successfully closed.</p>'}),this.updateUI(!1,!1),window.removeEventListener("beforeunload")):this.setState({logMessage:this.state.logMessage+'<p style="color:red">Failed to close BarcodeReader, status: '+e.status+", message: "+e.message+"</p>"})})))}},{key:"openButtonClicked",value:function(){var e=this.state.readerSelect.options[this.state.readerSelect.selectedIndex].value;"None"!==e?this.openBarcodeReader(e):this.openBarcodeReader(null)}},{key:"closeButtonClicked",value:function(){this.closeBarcodeReader(!1)}},{key:"activateButtonClicked",value:function(){this.activateBarcodeReader()}},{key:"deactivateButtonClicked",value:function(){this.deactivateBarcodeReader()}},{key:"addEventListenerButtonClicked",value:function(){var e="Remove Listener"!==this.state.addEventListenerButton.value;this.addRemoveBarcodeListener(e)}},{key:"enableTriggerButtonClicked",value:function(){var e="Disable Trigger"!==this.state.enableTriggerButton.value;this.enableTrigger(e)}},{key:"clearLogButtonClicked",value:function(){this.setState({logMessage:""})}},{key:"activateBarcodeReader",value:function(){this.setState({barcodeDataText:Object.assign({},this.state.barcodeDataText,{value:""}),symbTypeText:Object.assign({},this.state.symbTypeText,{value:""}),readTimeText:Object.assign({},this.state.readTimeText,{value:""})}),this.state.barcodeReader.activate(!0,this.onActivateComplete)}},{key:"deactivateBarcodeReader",value:function(){this.state.barcodeReader.activate(!1,this.onDeactivateComplete)}},{key:"addRemoveBarcodeListener",value:function(e){e?(this.state.barcodeReader.addEventListener("barcodedataready",this.onBarcodeDataReady,!1),this.setState({addEventListenerButton:Object.assign({},this.state.addEventListenerButton,{value:"Remove Listener"}),logMessage:this.state.logMessage+"<br>Added an event handler for the barcodedataready event."})):(this.state.barcodeReader.removeEventListener("barcodedataready",this.onBarcodeDataReady),this.setState({addEventListenerButton:Object.assign({},this.state.addEventListenerButton,{value:"Add Listener"}),logMessage:this.state.logMessage+"<br>Removed the event handler for the barcodedataready event."}))}},{key:"enableTrigger",value:function(e){this.state.barcodeReader.enableTrigger(e,this.onEnableTriggerComplete)}},{key:"onGetAvailableBarcodeReadersComplete",value:function(e){if(0!==e.length){for(var t,a=0;a<e.length;a++)t+='<option value="'+e[a]+'">'+e[a]+"</option>";this.setState({availableReaders:t})}}},{key:"onActivateComplete",value:function(e){0!==e.status&&this.setState({logMessage:this.state.logMessage+'<p style="color:red">BarcodeReader activate failed, status: '+e.status+", message: "+e.message+"</p>"})}},{key:"onDeactivateComplete",value:function(e){0!==e.status&&this.setState({logMessage:this.state.logMessage+'<p style="color:red">BarcodeReader deactivate failed, status: '+e.status+", message: "+e.message+"</p>"})}},{key:"onEnableTriggerComplete",value:function(e){0!==e.status?this.setState({logMessage:this.state.logMessage+'<p style="color:red">BarcodeReader enableTrigger failed, status: '+e.status+", message: "+e.message+"</p>"}):this.setState({enableTriggerButton:Object.assign({},this.state.enableTriggerButton,{value:"Disable Trigger"===this.state.enableTriggerButton.value?"Enable Trigger":"Disable Trigger"})})}},{key:"onBeforeUnload",value:function(e){var t="Please close BarcodeReader before leaving this page.";return(e||window.event).returnValue=t,t}},{key:"render",value:function(){return l.a.createElement("div",{className:"barcode-reader"},l.a.createElement("h3",null,"BarcodeReader API Demo"),l.a.createElement("label",{htmlFor:"readerSelect"},"Readers:"),l.a.createElement("select",{id:"readerSelect"},l.a.createElement("option",{value:"None"},"Select a reader"),this.state.availableReaders),l.a.createElement("br",null),l.a.createElement("input",{type:"button",value:"Open Reader",id:"openButton",onClick:this.openButtonClicked}),l.a.createElement("input",{type:"button",value:"Close Reader",id:"closeButton",onClick:this.closeButtonClicked,disabled:!0}),l.a.createElement("br",null),l.a.createElement("input",{type:"button",value:"Activate Reader",id:"activateButton",onClick:this.activateButtonClicked,disabled:!0}),l.a.createElement("input",{type:"button",value:"Deactivate Reader",id:"deactivateButton",onClick:this.deactivateButtonClicked,disabled:!0}),l.a.createElement("input",{type:"button",value:"Remove Listener",id:"addEventListenerButton",onClick:this.addEventListenerButtonClicked,disabled:!0}),l.a.createElement("input",{type:"button",value:"Disable Trigger",id:"enableTriggerButton",onClick:this.enableTriggerButtonClicked,disabled:!0}),l.a.createElement("input",{type:"button",value:"Clear log",id:"clearLogButton",onClick:this.clearLogButtonClicked}),l.a.createElement("div",null,l.a.createElement("b",null,"Barcode Data Read"),l.a.createElement("br",null),l.a.createElement("label",{htmlFor:"BarcodeData"},"Data:"),l.a.createElement("input",{type:"text",id:"BarcodeData",size:"20"}),l.a.createElement("br",null),l.a.createElement("label",{htmlFor:"SymbType"},"Symbology:"),l.a.createElement("input",{type:"text",id:"SymbType",size:"16"}),l.a.createElement("br",null),l.a.createElement("label",{htmlFor:"ReadTime"},"Time:"),l.a.createElement("input",{type:"text",id:"ReadTime",size:"24"}),l.a.createElement("br",null)),l.a.createElement("div",null,l.a.createElement("b",null,"Log:")),l.a.createElement("div",{id:"logMsg"},this.state.logMessage))}}]),t}(l.a.Component));u.a.render(l.a.createElement(g,null),document.getElementById("root"))}},[[8,1,2]]]);
//# sourceMappingURL=main.c534b3df.chunk.js.map